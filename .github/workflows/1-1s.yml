name: 1-1-preparation
on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 3 * * 1

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  weekly-1on1:
    runs-on: ubuntu-latest

    steps:
      - name: Merge existint PRs
        uses: actions/github-script@v3
        with:
          script: |
            const prs = await github.pulls.list({owner: context.repo.owner, repo: context.repo.repo, state: 'open'})
            for (var pull of prs.data) {
              await github.pulls.merge({owner: context.repo.owner, repo: context.repo.repo, pull_number: pull.number})
            }

      - name: Checkout workspace
        uses: actions/checkout@master
        with:
          ref: main

      - name: Set a couple of env variables we want to use
          run: |
            echo "NOW=$(date -v+7d +%F)" >> $GITHUB_ENV
            echo "BRANCH_NAME=$(date -v+7d +%F)_meeting_notes" >> $GITHUB_ENV
            echo "COMING_CALENDAR_WEEK=$(date -v-monday -v+7d '+%U')" >> $GITHUB_ENV

      - name: Create new branch for next 1-1 meeting
          uses: peterjgrainger/action-create-branch@v2.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            branch: ${{ env.BRANCH_NAME }}

      - name: Create new meeting notes files
          run: ./create_note.sh

      - name: Commit and push notes scaffold to branch
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            echo "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
            git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
            git config --global user.name $GITHUB_ACTOR
            git checkout -b ${{ env.BRANCH_NAME }}
            git add .
            git commit -m "Adding empty meeting notes for CW ${{ env.CW }} ${{env.REV}}"
            git push --set-upstream "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" ${{ env.BRANCH_NAME }}

      - name: Open a new pull request to be merged after we had our 1 on 1
          uses: repo-sync/pull-request@v2
          with:
            source_branch: "${{ env.BRANCH_NAME }}"           # If blank, default: triggered branch
            destination_branch: "main"                        # If blank, default: master
            pr_title: "${{ env.BRANCH_NAME }}"
            pr_body: ":crown: *An automated 1:1 PR*"          # Full markdown support, requires pr_title to be set
            pr_assignee: "abrauner"                           # Comma-separated list (no spaces)
            pr_label: "automerge"                             # Comma-separated list (no spaces)
            github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up stale branches
          uses: "jessfraz/branch-cleanup-action@master"
          with:
            secrets: ${{ secrets.GITHUB_TOKEN }}
