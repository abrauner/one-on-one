name: 1-1-preparation Meeting Notes
on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 9 * * 2  # Every Tuesday at 9am. The idea is to create the new PR after we had our 1-on-1 on Monday. â€“ https://crontab.guru

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  weekly-1on1:
    runs-on: ubuntu-latest

    steps:
      - name: Merge existint PRs
        uses: actions/github-script@v3
        with:
          script: |
            const prs = await github.pulls.list({owner: context.repo.owner, repo: context.repo.repo, state: 'open'})
            for (var pull of prs.data) {
              await github.pulls.merge({owner: context.repo.owner, repo: context.repo.repo, pull_number: pull.number})
            }

      - name: Checkout workspace
        uses: actions/checkout@master
        with:
          ref: main

      - name: Set a couple of env variables we want to use
        run: |
          echo "NOW=$(date --date="next week Monday" +%F)" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(date --date="next week Monday" +%F)_meeting_notes" >> $GITHUB_ENV
          echo "COMING_CALENDAR_WEEK=$(date --date="next week" +%U)" >> $GITHUB_ENV

      - name: Create new branch for next 1-1 meeting
        uses: peterjgrainger/action-create-branch@v2.0.1
        with:
          branch: ${{ env.BRANCH_NAME }}

      - name: Create new meeting notes files
        run: ./create_note.sh

      - name: Create Pull Request and commit new files to a branch used in this PR
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "Adding empty meeting notes for CW ${{ env.COMING_CALENDAR_WEEK }} ${{env.REV}}"
          title: "${{ env.BRANCH_NAME }}"
          body: ":crown: *An automated 1:1 PR*"
          branch: "${{ env.BRANCH_NAME }}"
          reviewers: "abrauner"
          add-paths: "meeting-notes/*"
          labels: |
            automated
            automerge

      - name: Clean up stale branches
        uses: "jessfraz/branch-cleanup-action@master"
        with:
          secrets: ${GITHUB_TOKEN}

      - name: Create the issue
        id: issue-bot
        uses: imjohnbo/issue-bot@v2
        with:
          title: "1:1 for ${{ env.NOW }}"
          assignees: "abrauner" # GitHub handle, assign to the employee to prepare for the next weeks 1-on-1
          labels: "1on1"
          pinned: true
          close-previous: true
          template: ".github/ISSUE_TEMPLATE/one-on-one.md" # assignees, labels will be overridden if present in YAML header
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate random questions
        if: success()
        uses: pierluigi/random-1on1-questions-action@v1.3
        with:
          issue-number: ${{ steps.issue-bot.outputs.issue-number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Optional: ovverride these defaults
          # num-categories: "3" # how many question categories
          # num-questions: "1" # how many questions per category
          # label: "1on1" # which label triggers this workflow
